ILCOMM // Fibonacci numbers in PīnyīnScript 1 0
FUNCTION gōngnéng 2 37
IDENTIFIER fibonacci 2 46
OPENPAR ( 2 55
IDENTIFIER n 2 56
CLOSEPAR ) 2 57
OPENKEY { 2 59
IF rúguǒ 3 65
OPENPAR ( 3 71
IDENTIFIER n 3 72
LESSTH < 3 74
EQUAL = 3 75
VINTEGER 1 3 77
CLOSEPAR ) 3 78
OPENKEY { 3 80
RETURN fǎnhuí 4 90
IDENTIFIER n 4 97
ENDST ; 4 98
CLOSEKEY } 5 104
ELSE biéde 5 106
OPENKEY { 5 112
RETURN fǎnhuí 6 122
IDENTIFIER fibonacci 6 129
OPENPAR ( 6 138
IDENTIFIER n 6 139
MINUS - 6 141
VINTEGER 1 6 143
CLOSEPAR ) 6 144
PLUS + 6 146
IDENTIFIER fibonacci 6 148
OPENPAR ( 6 157
IDENTIFIER n 6 158
MINUS - 6 160
VINTEGER 2 6 162
CLOSEPAR ) 6 163
ENDST ; 6 164
CLOSEKEY } 7 170
CLOSEKEY } 8 172
MAIN zhǔyàode 10 175
OPENKEY { 10 184
DTINTEGER zhěngshù 11 190
IDENTIFIER f 11 199
EQUAL = 11 201
IDENTIFIER fibonacci 11 203
OPENPAR ( 11 212
VINTEGER 10 11 213
CLOSEPAR ) 11 215
ENDST ; 11 216
PRINT dǎyìn 12 222
PRINTOP -> 12 228
VSTRING "The first ten numbers of Fibonacci are: " 12 231
ENDST ; 12 273
PRINT dǎyìn 13 279
PRINTOP -> 13 285
IDENTIFIER f 13 288
ENDST ; 13 289
CLOSEKEY } 14 291
ILCOMM // Print numbers backwards in PīnyīnScript 16 294
FUNCTION gōngnéng 17 337
IDENTIFIER printReverse 17 346
OPENPAR ( 17 358
IDENTIFIER n 17 359
CLOSEPAR ) 17 360
OPENKEY { 17 362
IF rúguǒ 18 368
OPENPAR ( 18 374
IDENTIFIER n 18 375
GREATERTH > 18 377
EQUAL = 18 378
VINTEGER 1 18 380
CLOSEPAR ) 18 381
OPENKEY { 18 383
PRINT dǎyìn 19 393
PRINTOP -> 19 399
IDENTIFIER n 19 402
ENDST ; 19 403
IDENTIFIER printReverse 20 413
OPENPAR ( 20 425
IDENTIFIER n 20 426
MINUS - 20 428
VINTEGER 1 20 430
CLOSEPAR ) 20 431
ENDST ; 20 432
CLOSEKEY } 21 438
CLOSEKEY } 22 440
MAIN zhǔyàode 24 443
OPENKEY { 24 452
IDENTIFIER printReverse 25 458
OPENPAR ( 25 470
VINTEGER 100 25 471
CLOSEPAR ) 25 474
ENDST ; 25 475
CLOSEKEY } 26 477
ILCOMM // Sum function in PīnyīnScript 28 480
FUNCTION gōngnéng 29 512
IDENTIFIER sum 29 521
OPENPAR ( 29 524
IDENTIFIER x 29 525
COMMA , 29 526
IDENTIFIER y 29 528
CLOSEPAR ) 29 529
OPENKEY { 29 531
RETURN fǎnhuí 30 537
IDENTIFIER x 30 544
PLUS + 30 546
IDENTIFIER y 30 548
ENDST ; 30 549
CLOSEKEY } 31 551
MAIN zhǔyàode 33 554
OPENKEY { 33 563
DTINTEGER zhěngshù 34 569
IDENTIFIER result 34 578
EQUAL = 34 585
IDENTIFIER sum 34 587
OPENPAR ( 34 590
VINTEGER 9 34 591
COMMA , 34 592
VINTEGER 5 34 594
CLOSEPAR ) 34 595
ENDST ; 34 596
PRINT dǎyìn 35 602
PRINTOP -> 35 608
VSTRING "The result is: " 35 611
ENDST ; 35 628
PRINT dǎyìn 36 634
PRINTOP -> 36 640
IDENTIFIER result 36 643
ENDST ; 36 649
CLOSEKEY } 37 651
ILCOMM // Hello world in PīnyīnScript 39 654
MAIN zhǔyàode 40 685
OPENKEY { 40 694
PRINT dǎyìn 41 700
PRINTOP -> 41 706
VSTRING "Hello world!!" 41 709
ENDST ; 41 724
CLOSEKEY } 42 726
ILCOMM // Iterative factorial in PīnyīnScript 44 729
FUNCTION gōngnéng 46 769
IDENTIFIER iterativeFactorial 46 778
OPENPAR ( 46 796
IDENTIFIER x 46 797
CLOSEPAR ) 46 798
OPENKEY { 46 800
DTINTEGER zhěngshù 47 806
IDENTIFIER result 47 815
EQUAL = 47 822
VINTEGER 1 47 824
ENDST ; 47 825
FOR pàn 48 831
OPENPAR ( 48 835
DTINTEGER zhěngshù 48 836
IDENTIFIER i 48 845
EQUAL = 48 847
VINTEGER 1 48 849
ENDST ; 48 850
IDENTIFIER i 48 852
LESSTH < 48 854
EQUAL = 48 855
IDENTIFIER x 48 857
ENDST ; 48 858
IDENTIFIER i 48 860
PLUS + 48 861
PLUS + 48 862
CLOSEPAR ) 48 863
IDENTIFIER result 49 873
EQUAL = 49 880
IDENTIFIER result 49 882
MULT * 49 889
IDENTIFIER i 49 891
ENDST ; 49 892
CLOSEKEY } 50 898
RETURN fǎnhuí 51 904
IDENTIFIER result 51 911
ENDST ; 51 917
CLOSEKEY } 52 919
ILCOMM // Recursive factorial in PīnyīnScript 54 922
FUNCTION gōngnéng 55 961
IDENTIFIER recursiveFactorial 55 970
OPENPAR ( 55 988
IDENTIFIER x 55 989
CLOSEPAR ) 55 990
OPENKEY { 55 992
IF rúguǒ 56 998
OPENPAR ( 56 1004
IDENTIFIER x 56 1005
LESSTH < 56 1007
EQUAL = 56 1008
VINTEGER 1 56 1010
CLOSEPAR ) 56 1011
OPENKEY { 56 1013
RETURN fǎnhuí 57 1023
VINTEGER 1 57 1030
ENDST ; 57 1031
CLOSEKEY } 58 1037
ELSE biéde 58 1039
OPENKEY { 58 1045
RETURN fǎnhuí 59 1055
IDENTIFIER x 59 1062
MULT * 59 1064
IDENTIFIER recursiveFactorial 59 1066
OPENPAR ( 59 1084
IDENTIFIER x 59 1085
MINUS - 59 1087
VINTEGER 1 59 1089
CLOSEPAR ) 59 1090
ENDST ; 59 1091
CLOSEKEY } 60 1097
CLOSEKEY } 61 1099
MAIN zhǔyàode 63 1102
OPENKEY { 63 1111
DTINTEGER zhěngshù 64 1117
IDENTIFIER n 64 1126
EQUAL = 64 1128
VINTEGER 5 64 1130
ENDST ; 64 1131
DTINTEGER zhěngshù 65 1137
IDENTIFIER result 65 1146
EQUAL = 65 1153
IDENTIFIER recursiveFactorial 65 1155
OPENPAR ( 65 1173
IDENTIFIER n 65 1174
CLOSEPAR ) 65 1175
ENDST ; 65 1176
PRINT dǎyìn 66 1182
PRINTOP -> 66 1188
VSTRING "The result is : " 66 1191
ENDST ; 66 1209
PRINT dǎyìn 67 1215
PRINTOP -> 67 1221
IDENTIFIER result 67 1224
ENDST ; 67 1230
CLOSEKEY } 68 1232
